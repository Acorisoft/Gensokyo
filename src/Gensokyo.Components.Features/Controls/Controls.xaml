<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Gensokyo.Components.Controls"
                    xmlns:xaml="https://github.com/Acorisoft/Gensokyo/Xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Gensokyo.Components.Features;component/Themes/Color.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!--  -->
    <xaml:DegreeBrushConverter x:Key="DegreeBrush" Opacity=".3"/>

    <Style x:Key="ToggleSwitch.Base" TargetType="{x:Type c:ToggleSwitch}">
        <Setter Property="Background" Value="{StaticResource Brushes.MaterialDesign.Indigo}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="MinWidth" Value="128" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsThreeState" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ToggleSwitch.Icon" TargetType="{x:Type c:ToggleSwitch}" BasedOn="{StaticResource ToggleSwitch.Base}">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="144" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ToggleSwitch}">
                    <AdornerDecorator>
                        <DockPanel>
                            <Border x:Name="PART_Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Width="84" CornerRadius="20" Padding="6"
                                    DockPanel.Dock="Left">
                                <Border x:Name="PART_Thumb"
                                        Background="{StaticResource Brushes.White}"
                                        CornerRadius="99" Height="28" Width="28"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center">
                                    <ContentPresenter ContentSource="Icon"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      SnapsToDevicePixels="True"/>
                                    <Border.RenderTransform>
                                        <TranslateTransform X="0"/>
                                    </Border.RenderTransform>
                                </Border>
                            </Border>
                            <ContentPresenter ContentSource="Content"
                                              DockPanel.Dock="Right"
                                              Margin="16 0 0 0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Background}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="LightGray" TargetName="PART_Border"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                        <EasingDoubleKeyFrame Value="36" KeyTime="0:0:0.000"/>
                                        <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.150"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                    <DoubleAnimationUsingKeyFrames>
                                        <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.000"/>
                                        <EasingDoubleKeyFrame Value="36" KeyTime="0:0:0.150"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleSwitch.Circle" TargetType="{x:Type c:ToggleSwitch}" BasedOn="{StaticResource ToggleSwitch.Base}">
        <Setter Property="Height" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ToggleSwitch}">
                    <AdornerDecorator>
                        <DockPanel>
                            <Border x:Name="PART_Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Width="64" CornerRadius="15" Padding="8"
                                    DockPanel.Dock="Left">
                                <Border x:Name="PART_Thumb"
                                        Background="{StaticResource Brushes.White}"
                                        CornerRadius="99"
                                        Height="12"
                                        Width="12"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center">
                                    <Border.RenderTransform>
                                        <TranslateTransform X="0"/>
                                    </Border.RenderTransform>
                                </Border>
                            </Border>
                            <ContentPresenter ContentSource="Content"
                                              DockPanel.Dock="Right"
                                              Margin="16 0 0 0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Background}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="LightGray" TargetName="PART_Border"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                        <EasingDoubleKeyFrame Value="36" KeyTime="0:0:0.000"/>
                                        <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.150"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                    <DoubleAnimationUsingKeyFrames>
                                        <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.000"/>
                                        <EasingDoubleKeyFrame Value="36" KeyTime="0:0:0.150"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleSwitch.Circle.Little" TargetType="{x:Type c:ToggleSwitch}" BasedOn="{StaticResource ToggleSwitch.Base}">
        <Setter Property="Height" Value="20" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ToggleSwitch}">
                    <AdornerDecorator>
                        <DockPanel>
                            <Border x:Name="PART_Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Width="48" CornerRadius="10" Padding="4"
                                    DockPanel.Dock="Left">
                                <Border x:Name="PART_Thumb"
                                        Background="{StaticResource Brushes.White}"
                                        CornerRadius="99"
                                        Height="12"
                                        Width="12"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center">
                                    <Border.RenderTransform>
                                        <TranslateTransform X="0"/>
                                    </Border.RenderTransform>
                                </Border>
                            </Border>
                            <ContentPresenter ContentSource="Content"
                                              DockPanel.Dock="Right"
                                              Margin="16 0 0 0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Background}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="LightGray" TargetName="PART_Border"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                        <EasingDoubleKeyFrame Value="26" KeyTime="0:0:0.000"/>
                                        <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.150"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                    <DoubleAnimationUsingKeyFrames>
                                        <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.000"/>
                                        <EasingDoubleKeyFrame Value="26" KeyTime="0:0:0.150"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ToggleSwitch.Square" TargetType="{x:Type c:ToggleSwitch}" BasedOn="{StaticResource ToggleSwitch.Base}">
        <Setter Property="Height" Value="36" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ToggleSwitch}">
                    <AdornerDecorator>
                        <DockPanel>
                            <Border x:Name="PART_Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Width="64" CornerRadius="10" Padding="8"
                                    DockPanel.Dock="Left">
                                <Border x:Name="PART_Thumb"
                                        Background="{StaticResource Brushes.White}"
                                        CornerRadius="4"
                                        Height="16"
                                        Width="16"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center">
                                    <Border.RenderTransform>
                                        <TranslateTransform X="0"/>
                                    </Border.RenderTransform>
                                </Border>
                            </Border>
                            <ContentPresenter ContentSource="Content"
                                              DockPanel.Dock="Right"
                                              Margin="16 0 0 0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Positive}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Negative}" TargetName="PART_Border"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                        <EasingDoubleKeyFrame Value="36" KeyTime="0:0:0.000"/>
                                        <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.150"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                    <DoubleAnimationUsingKeyFrames>
                                        <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.000"/>
                                        <EasingDoubleKeyFrame Value="28" KeyTime="0:0:0.150"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleState.Base" TargetType="{x:Type c:ToggleState}">
        <Setter Property="Negative" Value="#636363" />
        <Setter Property="Positive" Value="#FFAB12" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Foreground" Value="{StaticResource Brushes.Paper}" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:ToggleState}">
                    <AdornerDecorator>
                        <Border x:Name="PART_Border"
                                Background="{TemplateBinding Positive,Converter={StaticResource DegreeBrush}}"
                                BorderBrush="{TemplateBinding Positive}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid>
                                <ContentPresenter x:Name="PART_Positive"
                                                  ContentSource="PositiveValue"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="PART_Negative"
                                                  ContentSource="NegativeValue"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Positive}" TargetName="PART_Border"/>
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Positive,Converter={StaticResource DegreeBrush}}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Negative}" TargetName="PART_Border"/>
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Negative,Converter={StaticResource DegreeBrush}}" TargetName="PART_Border"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Positive" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.300" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Negative" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.300" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Positive" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.000">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.300">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Negative" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.000">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.300">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Positive" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.000" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.300" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Negative" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.300" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Positive" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.000">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.300">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Negative" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.000">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.300">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style TargetType="{x:Type c:ToggleSwitch}" BasedOn="{StaticResource ToggleSwitch.Circle}"/>
    <Style TargetType="{x:Type c:ToggleState}" BasedOn="{StaticResource ToggleState.Base}"/>
    <Style TargetType="{x:Type c:ToggleValue}" BasedOn="{StaticResource ToggleState.Base}"/>
</ResourceDictionary>